namespace hu.bme.mit.temalab

participant Intersection identified by intersectionId {
  o String intersectionId
  --> EntryPoint[] entryPoints
}

participant InsuranceCompany identified by insuranceCompanyId {
  o String insuranceCompanyId
  o String name
}

participant Vehicle identified by vehicleId {
  o String vehicleId
  --> PreemptionUtilityToken[] tokens
}

participant Police identified by policeId {
  o String policeId
}

participant TrafficAuthority identified by trafficAuthorityId {
  o String trafficAuthorityId
}

/* TOKENS */

asset PreemptionUtilityToken identified by tokenId {
  o String tokenId
  --> Vehicle owner
  o Boolean isValid default = true
  o DateTime latestUpdateTime
  o Boolean trafficAuthoritySignature default = false
}
  
/* Sign the token. This allows UnBurn transaction. */
transaction Sign {
  --> PreemptionUtilityToken[] tokens
}
  
 /* Reactivate invalidated (burned) tokens. Available to InsuranceCompany, but the signature of the TrafficAuthority is needed (on the tokens). */
transaction UnBurn {
  --> PreemptionUtilityToken[] tokens
}
 /* Clears all invalid tokens with latestUpdate older than 60 days. This should be available only for TrafficAuthority (in ACL). */
transaction Clear {
}

/* When a request is taken into account, the Intersection burns the token(s). This destroys the token. */
transaction Burn {
  --> Vehicle vehicle
  --> PreemptionUtilityToken[] tokens
}

/* Create a given amount of tokens belonging to a Vehicle. This should be available only for TrafficAuthority (in ACL). */
transaction Issue {
  --> Vehicle vehicle
  o String[] tokenIds
}

//////////////////////////////////////////////////////////////////



asset RLRevent identified by RLReventId{
  o String RLReventId
  o String lastSignalChangeId
  o String pictureHash
  o String evidence optional
  -->Vehicle vehicle optional
  -->SignalChangeEvent sce
  o String gpsdata optional
  o Boolean invalid
  --> EntryPoint entry
  --> Intersection intersection
}

abstract asset Preempt {
  --> EntryPoint entryPoint
}

asset GreenExtensionRequestEvent identified by GreenExtensionRequestEventId extends Preempt {
	o String GreenExtensionRequestEventId
}

asset PreemptionRequestEvent identified by PreemptionRequestEventId extends Preempt {
	o String PreemptionRequestEventId
}

asset SignalChangeEvent identified by SignalChangeEventId {
  o String SignalChangeEventId
  --> EntryPoint entryPoint
  --> SignalChangeEvent lastSignalChange
}

asset EntryPoint identified by entryPointId{
  o String entryPointId
}

/*TrafficAuthority can update Intersection infrastructure*/
transaction updateEntryPoints {
  --> Intersection intersection
  --> EntryPoint[] newPoints			//Replaces old EntryPoint[] array with new instances

}

/*Police can update VehicleID in the RLREvent*/
transaction updateVehicleID {
  -->RLRevent event
  -->Vehicle vehicle
}

/*Police can invalidate an RLREvent*/
transaction invalidateRLREvent {
  -->RLRevent event
}

/*Vehicles(owners) can contest RLREvents*/
transaction contestRLREvent {
  -->RLRevent event
  o String evidence optional
  o String gpsdata optional
  -->SignalChangeEvent sce optional
}
